1. Search as  you type

//Create index
PUT /suggestion
{
  "mappings": {
    "book": {
      "properties": {
        "title": {
          "type": "string"
        },
        "title_suggest": {
          "type": "completion"
        }
      }
    }
  }
}

//Create documents
PUT  /suggestion/book/1
{
	"title" : "Elasticsearch book one",
	"title_suggest" : "Elasticsearch book one"
}

PUT  /suggestion/book/2
{
	"title" : "Elasticsearch book two",
	"title_suggest" : "Elasticsearch book two"
}

PUT  /suggestion/book/3
{
	"title" : "Elasticsearch book three",
	"title_suggest" : "Elasticsearch book three"
}

//Query suggestion
POST /suggestion/_suggest
{
  "title" : {
    "text" : "elas",
    "completion" : {
      "field" : "title_suggest",
      "size" : 10
    }
  }
}


//Solution :: multiple inputs
PUT /suggestion/book/1
{
  "title": "Elasticsearch book one",
  "title_suggest": {
    "input": [
      "Elasticsearch book one",
      "Book elasticsearch"
    ]
  }
}

PUT /suggestion/book/1
{
  "title": "Elasticsearch book one",
  "title_suggest": {
    "input": [
      "Elasticsearch book one",
      "Book elasticsearch",
      "buy now .... "
    ]
  }
}


//Solution :: single output
PUT /suggestion/book/1
{
  "title": "Elasticsearch book one",
  "title_suggest": {
    "input": [
      "Elasticsearch book one",
      "Book elasticsearch",
      "buy now .... "
    ],
    "output": "Elasticsearch book one"
  }
}


//Solution :: boost score
PUT /suggestion/book/2
{
  "title": "Elasticsearch book two",
  "title_suggest": {
    "input": [
      "Elasticsearch book one",
      "discount"
    ],
    "output": "Elasticsearch book two",
    "weight": 10
  }
}


//Solution :: working with payloads
DELETE  /suggestion

PUT /suggestion
{
  "mappings": {
    "book": {
      "properties": {
        "title": {
          "type": "string"
        },
        "title_suggest": {
          "type": "completion",
          "payloads": true
        }
      }
    }
  }
}

//Create documents
PUT /suggestion/book/1
{
  "title": "Elasticsearch book one",
  "title_suggest": {
    "input": [
      "Elasticsearch book one"
    ],
    "payload": {
      "product_id": 1
    }
  }
}


PUT /suggestion/book/2
{
  "title": "Elasticsearch book two",
  "title_suggest": {
    "input": [
      "Elasticsearch book two"
    ],
    "payload": {
      "product_id": 2
    }
  }
}

PUT /suggestion/book/3
{
  "title": "Elasticsearch book three",
  "title_suggest": {
    "input": [
      "Elasticsearch book three"
    ],
    "payload": {
      "product_id": 3
    }
  }
}


//Query suggestion
POST /suggestion/_suggest
{
  "title" : {
    "text" : "elas",
    "completion" : {
      "field" : "title_suggest",
      "size" : 10
    }
  }
}







